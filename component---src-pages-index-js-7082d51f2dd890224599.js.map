{"version":3,"sources":["webpack:///./src/components/engine.js","webpack:///./src/components/anycounter.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["minHex","maxHex","minDigits","maxDigits","allDigits","isHex","h","includes","toLowerCase","engine_min","newValue","split","map","s","parseInt","Number","engine_max","engine_get","reduce","prev","digit","d","toString","engine_next","place","length","counter_increment","engine_reset","_toConsumableArray","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","title","marginTop","marginBottom","subtitle","fontSize","textFieldLarge","AnyCounter","_useState","useState","setMinDigits","_useState2","setMaxDigits","_useState3","setAllDigits","classes","useEffect","react_default","a","createElement","className","Grid","container","item","xs","TextField","id","label","defaultValue","textField","helperText","margin","onChange","event","target","value","Button","variant","onClick","direction","Typography","gutterBottom","href","rel","aria-label","index_esm","size","aria-hidden","IndexPage","layout","seo","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","_ref","children","Fragment","style","maxWidth","paddingTop","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-7082d51f2dd890224599.js","sourcesContent":["\n\nvar minHex = false\nvar maxHex = false\nvar minDigits = [0]\nvar maxDigits = [0]\nvar allDigits = [0]\n\nfunction counter_increment(){\n    let place = allDigits.length - 1;\n\n    allDigits[place] += 1\n    // work backwards, add 1 to buffer[col][n] and carry if needed to n-1\n    while (allDigits[place] > maxDigits[place]) {\n        allDigits[place] = 0 // reset place\n        if (place === 0)\n            break;         // have we maxed out\n        if (place > 0) allDigits[place-1] += 1 // carry to next plae\n        place -= 1;\n    }\n}\n\nfunction isHex(h) {\n    return ('abcdef'.includes(h.toLowerCase()))\n}\n\nfunction asHex(d) {\n    if (minHex | maxHex) {\n        if (d>9 && d<16) return d.toString(16)\n    }\n    return d.toString(10)\n}\n\nexport function engine_min(newValue) {\n    minHex = false\n    minDigits = newValue.split(' ').map((s) => {\n        if (isHex(s)) {\n            minHex = true\n            return parseInt(s,16);\n        }\n        return Number(s)\n    })\n}\n\nexport function engine_max(newValue) {\n    maxHex = false\n    maxDigits = newValue.split(' ').map((s) => {\n        if (isHex(s)) {\n            maxHex = true\n            return parseInt(s,16);\n        }\n        return Number(s)\n    })\n}\n\nexport function engine_get() {\n    let result = allDigits.reduce((prev, digit) => {\n        return prev + ' ' + asHex(digit)\n    }, '')\n    return result\n}\n\nexport function engine_next() {\n    counter_increment()\n}\n\nexport function engine_reset() {\n    allDigits = [...minDigits]\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\"\nimport { FaGithub } from 'react-icons/fa'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n  engine_min,\n  engine_max,\n  engine_get,\n  engine_next,\n  engine_reset,\n} from \"./engine\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    marginTop: 20,\n    marginBottom: 5,\n  },\n  subtitle: {\n    marginTop: 0,\n    fontSize: 20,\n  },\n  textFieldLarge: {\n    fontSize: 60,\n  },\n}))\n\nexport default function AnyCounter() {\n  const [minDigits, setMinDigits] = useState(\"0 0\")\n  const [maxDigits, setMaxDigits] = useState(\"1 1\")\n  const [allDigits, setAllDigits] = useState(\"0 0\")\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    engine_min(minDigits)\n    engine_max(maxDigits)\n    engine_reset()\n    setAllDigits(engine_get())\n  }, [])\n\n  const onMinChange = event => {\n    setMinDigits(event.target.value)\n  }\n\n  const onMaxChange = event => {\n    setMaxDigits(event.target.value)\n  }\n\n  const onResetClick = () => {\n    engine_min(minDigits)\n    engine_max(maxDigits)\n    engine_reset()\n    setAllDigits(engine_get())\n  }\n\n  const onNextClick = () => {\n    engine_next()\n    setAllDigits(engine_get())\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <h1 className={classes.title}>Any-Counter</h1>\n          <h4 className={classes.subtitle}>\n            (counter with variable digit ranges)\n          </h4>\n        </Grid>\n        <Grid item xs={5}>\n          <TextField\n            id=\"standard-helperText\"\n            label=\"max\"\n            defaultValue={maxDigits}\n            className={classes.textField}\n            helperText=\"per digit seperated by spaces, hex allowed\"\n            margin=\"normal\"\n            onChange={onMaxChange}\n          />\n        </Grid>\n        <Grid item xs={5}>\n          <TextField\n            id=\"standard-helperText\"\n            label=\"min\"\n            defaultValue={minDigits}\n            className={classes.textField}\n            helperText=\"per digit seperated by spaces, hex allowed\"\n            margin=\"normal\"\n            onChange={onMinChange}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Button variant=\"contained\" color=\"primary\" onClick={onResetClick}>\n            Reset\n          </Button>\n        </Grid>\n\n        <Grid item xs={10}>\n          <h1 className={classes.textFieldLarge}>{allDigits}</h1>\n        </Grid>\n        <Grid item xs={2}>\n          <Grid container spacing={3} direction=\"column\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" onClick={onNextClick}>\n                Next\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" gutterBottom>\n            Why? What is the purpose of this application?\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            There are several problems that can be solved with a counter that\n            uses different ranges for the digits. For example, if you enter all\n            1s for max, then you have a binary counter. If you enter 'FF', then\n            you have a hex counter.\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            A more complex example is min set to '5 0 0' and max set to '9 59\n            59' then you have a time counter from 5 mins to 10 mins.\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            This algorithm was originally used to 'count' thru the permutations of\n            letter from a phone.  '2' shows 'abc', '7' shows 'pqrs'.  The ranges are\n            different.  This algorithm was used to map from integers to letters.  With\n            min set to '0 0', and max to '2 3', the count would be '0 0', '0 1'...'2 3'.\n            This can easily be mapped to 'ap', 'aq'...'cs'.\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            This example can be the source of other various types of counters.\n            The source can be found on GitHub {' '}\n            <a\n              href={`https://github.com/alpiepho/any-counter`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"github\"\n            >\n              <FaGithub size={32} aria-hidden=\"true\" />\n            </a>\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport AnyCounter from \"../components/anycounter\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <AnyCounter />\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n// import { useStaticQuery, graphql } from \"gatsby\"\n\n// import Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  // const data = useStaticQuery(graphql`\n  //   query SiteTitleQuery {\n  //     site {\n  //       siteMetadata {\n  //         title\n  //       }\n  //     }\n  //   }\n  // `)\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        {/* <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer> */}\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}